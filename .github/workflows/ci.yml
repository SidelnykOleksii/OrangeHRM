name: CI for OrangeHRM

on:
  schedule:
    - cron: "0 15 * * *"

  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: Smoke tests
        type: choice
        options:
          - Smoke tests
          - All tests

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  daily_regression_all_tests:
    if: github.event_name == 'schedule'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          node-version: '20'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.1'
          node-version: '20'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps
      - name: Run all tests
        run: pytest -v ./Tests --disable-warnings --alluredir=allure-results
        continue-on-error: true
      - name: Store allure results  # Дозволяє звантажити в наступній job результати виконання тестів. Це артефакт джоби test.
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1

  manual_tests:
    if: github.event_name == 'workflow_dispatch'
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.1'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Ensure browsers are installed
        run: python -m playwright install --with-deps

      - name: Smoke tests
        if: "github.event.inputs.deployment_target == 'Smoke tests'"
        run: pytest -m "smoke" -v --disable-warnings --alluredir=allure-results
        continue-on-error: true

      - name: All tests
        if: "github.event.inputs.deployment_target == 'All tests'"
        run: pytest -v ./Tests --disable-warnings --alluredir=allure-results
        continue-on-error: true

      - name: Store allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate_report:
    runs-on: windows-latest
    needs: manual_tests
    name: Generate report
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: 'microsoft' # See 'Supported distributions' for available options
          java-version: '17'
#      - run: |
#          Invoke-WebRequest -Uri https://github.com/allure-framework/allure2/releases/download/2.23.1/allure-2.23.1.zip -OutFile allure-2.23.1.zip
#          Expand-Archive -Path allure-2.23.1.zip -DestinationPath C:\allure
#          [Environment]::SetEnvironmentVariable('Path', $Env:Path + ';C:\allure\allure-2.23.1\bin', [System.EnvironmentVariableTarget]::Machine)

      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: build/allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history

#      - name: Store generated report
#        uses: actions/upload-artifact@v3
#        with:
#          name: _site
#          path:
#            _site
#          retention-days: 1
#
#  publish_report:
#    runs-on: windows-latest
#    needs: generate_report
#    if: needs.generate_report.result == 'success'
#    name: Report publication
#    steps:
#      - name: Download all workflow run artifacts
#        uses: actions/download-artifact@v3
#
#      - name: Upload Pages artifact
#        uses: actions/upload-pages-artifact@v2
#        with:
#          path: _site
#
#      - name: Deploy to GitHub Pages
#        id: deployment
#        uses: actions/deploy-pages@v1.2.9